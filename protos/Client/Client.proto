syntax = "proto3";

package Client;

message ClientSchema{
  string id = 1;
  string name = 2;
  string type = 3;
  optional int32 tax_number = 4;
  string phone = 5;
  optional string email = 6;
  optional string gender = 7;
  optional string street = 8;
  optional string city = 9;
  optional string zip_code = 10;
  int64 created_at = 11;
  int64 updated_at = 12;
}

message GetClientRequest{
  string id = 1;
}

message GetClientResponse{
  ClientSchema client = 1;
}

message SetClientRequest{
  ClientSchema client = 1;
}

message SetClientResponse{
  string id = 1;
}

message UpdateClientRequest{
  ClientSchema client = 1;
}

message UpdateClientResponse{
  bool updated = 1;
}

message DeleteClientRequest{
  string id = 1;
}

message DeleteClientResponse{
  bool deleted = 1;
}

message GetAllClientsRequest{
  int32 page = 1;
  int32 per_page = 2;
  string sort = 3;
  string orderby = 4;
  optional string where = 5;

}

message GetAllClientsResponse{
  int32 count = 1;
  int32 page = 2;
  int32 per_page = 3;
  string sort = 4;
  bool is_next_page = 5;
  repeated ClientSchema clients = 6;
}

service Client{
  //Un
  rpc GetClient (GetClientRequest) returns (GetClientResponse) {};

  rpc SetClient (SetClientRequest) returns (SetClientResponse) {};

  rpc UpdateClient (UpdateClientRequest) returns (UpdateClientResponse) {};

  rpc DeleteClient (DeleteClientRequest) returns (DeleteClientResponse) {};

  rpc GetAllClients (GetAllClientsRequest) returns (GetAllClientsResponse) {};
}

