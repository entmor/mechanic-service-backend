syntax = "proto3";

import 'Schema/UserSchema.proto';
import 'Schema/AuthSchema.proto';

package User;

message GetUserRequest{
  string id = 1;
}

message GetUserResponse{
  Schema.UserSchema user = 1;
}

message SetUserRequest{
  Schema.UserSchema user = 1;
  bool send_email = 2;
}

message SetUserResponse{
  string id = 1;
}

message UpdateUserRequest{
  Schema.UserSchema user = 1;
}

message UpdateUserResponse{
  bool updated = 1;
}

message DeleteUserRequest{
  string id = 1;
}

message DeleteUserResponse{
  bool deleted = 1;

}

message GetAllUsersRequest{
  int32 page = 1;
  int32 per_page = 2;
  string sort = 3;
  string orderby = 4;
  optional string where = 5;
}

message GetAllUsersResponse{
  int32 count = 1;
  int32 page = 2;
  int32 per_page = 3;
  string sort = 4;
  bool is_next_page = 5;
  repeated Schema.UserSchema users = 6;
}

message GetUserAuthRequest{
  string email = 1;
}

message GetUserAuthResponse{
  Schema.UserSchema user = 1;
  string salt = 2;
}

service User{
  // USER
  rpc GetUser (GetUserRequest) returns (GetUserResponse) {};

  rpc SetUser (SetUserRequest) returns (SetUserResponse) {};

  rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {};

  rpc DeleteUser (DeleteUserRequest) returns (DeleteUserResponse) {};

  // ALL USERS
  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {};

  // GET USER FOR AUTH
  rpc GetUserAuth(GetUserAuthRequest) returns (GetUserAuthResponse) {};

}

