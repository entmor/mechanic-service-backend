syntax = "proto3";

package Vehicle;

import 'Schema/VehicleSchema.proto';

message GetVehicleRequest{
  string id = 1;
}

message GetVehicleResponse{
  Schema.VehicleSchema vehicle = 1;
}

message SetVehicleRequest{
  Schema.VehicleSchema vehicle = 1;
}

message SetVehicleResponse{
  string id = 1;
}

message UpdateVehicleRequest{
  Schema.VehicleSchema vehicle = 1;
}

message UpdateVehicleResponse{
  bool updated = 1;
}

message DeleteVehicleRequest{
  string id = 1;
}

message DeleteVehicleResponse{
  bool deleted = 1;
}

message DeleteAllVehiclesByClientIdRequest{
  string client_id = 1;
}

message DeleteAllVehiclesByClientIdResponse{
  bool deleted = 1;
}

message GetAllVehiclesRequest{
  int32 page = 1;
  int32 per_page = 2;
  string sort = 3;
  string orderby = 4;
  optional string where = 5;
}

message GetAllVehiclesResponse{
  int32 count = 1;
  int32 page = 2;
  int32 per_page = 3;
  string sort = 4;
  bool is_next_page = 5;
  repeated Schema.VehicleSchema vehicles = 6;
}

service Vehicle{
  //Un
  rpc GetVehicle (GetVehicleRequest) returns (GetVehicleResponse) {};

  rpc SetVehicle (SetVehicleRequest) returns (SetVehicleResponse) {};

  rpc UpdateVehicle (UpdateVehicleRequest) returns (UpdateVehicleResponse) {};

  rpc DeleteVehicle (DeleteVehicleRequest) returns (DeleteVehicleResponse) {};

  rpc GetAllVehicles (GetAllVehiclesRequest) returns (GetAllVehiclesResponse) {};

  rpc DeleteAllVehiclesByClientId (DeleteAllVehiclesByClientIdRequest) returns (DeleteAllVehiclesByClientIdResponse) {};
}

